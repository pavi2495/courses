{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3001\";\nexport const getCourseById = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/courses/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching course with ID ${id}:`, error);\n    throw error;\n  }\n};\nexport const getCourses = async (page = 1, pageSize = 10) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/courses`, {\n      params: {\n        page: page,\n        pageSize: pageSize\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching courses:\", error);\n    throw error;\n  }\n};\nexport const createCourse = async course => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/courses`, course);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating course:\", error);\n    throw error;\n  }\n};\nexport const updateCourse = async (id, course) => {\n  try {\n    const response = await axios.patch(`${API_BASE_URL}/courses/${id}`, course);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating course:\", error);\n    throw error;\n  }\n};\nexport const deleteCourse = async id => {\n  try {\n    await axios.delete(`${API_BASE_URL}/courses/${id}`);\n  } catch (error) {\n    console.error(\"Error deleting course:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getCourseById","id","response","get","data","error","console","getCourses","page","pageSize","params","createCourse","course","post","updateCourse","patch","deleteCourse","delete"],"sources":["/home/azhagu/workspace/courses/courses/frontend/src/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3001\";\n\nexport interface Course {\n  id: number;\n  name: string;\n  members: number;\n  coachId: number;\n  description: string;\n  createdDate: Date;\n}\n\nexport interface AllCourses {\n  courses: Course[];\n  totalCount: number;\n}\n\nexport const getCourseById = async (id: number): Promise<Course> => {\n  try {\n    const response: AxiosResponse<Course> = await axios.get(\n      `${API_BASE_URL}/courses/${id}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching course with ID ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const getCourses = async (\n  page: number = 1,\n  pageSize: number = 10\n): Promise<AllCourses> => {\n  try {\n    const response: AxiosResponse<AllCourses> = await axios.get(\n      `${API_BASE_URL}/courses`,\n      {\n        params: {\n          page: page,\n          pageSize: pageSize,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching courses:\", error);\n    throw error;\n  }\n};\n\nexport const createCourse = async (course: {\n  name: string;\n  members: number;\n  coachId: number;\n  description: string;\n}): Promise<Course> => {\n  try {\n    const response: AxiosResponse<Course> = await axios.post(\n      `${API_BASE_URL}/courses`,\n      course\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating course:\", error);\n    throw error;\n  }\n};\n\nexport const updateCourse = async (\n  id: number,\n  course: {\n    name: string;\n    members: number;\n    coachId: number;\n    description: string;\n  }\n): Promise<Course> => {\n  try {\n    const response: AxiosResponse<Course> = await axios.patch(\n      `${API_BASE_URL}/courses/${id}`,\n      course\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating course:\", error);\n    throw error;\n  }\n};\n\nexport const deleteCourse = async (id: number): Promise<void> => {\n  try {\n    await axios.delete(`${API_BASE_URL}/courses/${id}`);\n  } catch (error) {\n    console.error(\"Error deleting course:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,MAAMC,YAAY,GAAG,uBAAuB;AAgB5C,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAU,IAAsB;EAClE,IAAI;IACF,MAAMC,QAA+B,GAAG,MAAMJ,KAAK,CAACK,GAAG,CACpD,GAAEJ,YAAa,YAAWE,EAAG,EAChC,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAE,iCAAgCJ,EAAG,GAAE,EAAEI,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CACxBC,IAAY,GAAG,CAAC,EAChBC,QAAgB,GAAG,EAAE,KACG;EACxB,IAAI;IACF,MAAMP,QAAmC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CACxD,GAAEJ,YAAa,UAAS,EACzB;MACEW,MAAM,EAAE;QACNF,IAAI,EAAEA,IAAI;QACVC,QAAQ,EAAEA;MACZ;IACF,CACF,CAAC;IACD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,YAAY,GAAG,MAAOC,MAKlC,IAAsB;EACrB,IAAI;IACF,MAAMV,QAA+B,GAAG,MAAMJ,KAAK,CAACe,IAAI,CACrD,GAAEd,YAAa,UAAS,EACzBa,MACF,CAAC;IACD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMS,YAAY,GAAG,MAAAA,CAC1Bb,EAAU,EACVW,MAKC,KACmB;EACpB,IAAI;IACF,MAAMV,QAA+B,GAAG,MAAMJ,KAAK,CAACiB,KAAK,CACtD,GAAEhB,YAAa,YAAWE,EAAG,EAAC,EAC/BW,MACF,CAAC;IACD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,YAAY,GAAG,MAAOf,EAAU,IAAoB;EAC/D,IAAI;IACF,MAAMH,KAAK,CAACmB,MAAM,CAAE,GAAElB,YAAa,YAAWE,EAAG,EAAC,CAAC;EACrD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}