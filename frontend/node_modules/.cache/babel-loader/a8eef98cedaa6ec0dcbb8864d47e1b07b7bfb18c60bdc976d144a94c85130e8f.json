{"ast":null,"code":"var _jsxFileName = \"/home/azhagu/workspace/note-taking/frontend/src/components/NoteDialogBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@mui/material\";\nimport colors from \"../colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteDialogBox = ({\n  open,\n  onClose,\n  onSave,\n  title: initialTitle,\n  body: initialBody\n}) => {\n  _s();\n  const [title, setTitle] = React.useState(initialTitle);\n  const [body, setBody] = React.useState(initialBody);\n  const [isSaveDisabled, setIsSaveDisabled] = useState(true);\n  useEffect(() => {\n    // Enable or disable the \"Save\" button based on whether title and body are empty or not\n    setIsSaveDisabled(!title.trim() || !body.trim());\n  }, [title, body]);\n  useEffect(() => {\n    if (!open) {\n      // Reset the internal state when the dialog is closed\n      setTitle(initialTitle);\n      setBody(initialBody);\n    }\n  }, [open, initialTitle, initialBody]);\n  const handleSave = () => {\n    onSave({\n      title,\n      body\n    });\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: colors.lightBackground,\n        color: colors.primary\n      },\n      children: initialTitle ? \"Edit Note\" : \"Add New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      style: {\n        backgroundColor: colors.lightBackground,\n        color: colors.primary\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        margin: \"dense\",\n        value: title,\n        onChange: e => {\n          if (e.target.value.length === 0) set;\n          setTitle(e.target.value);\n        },\n        placeholder: \"Title\",\n        sx: {\n          backgroundColor: colors.secondary\n        },\n        InputProps: {\n          style: {\n            color: colors.primary,\n            border: `1px solid ${colors.lightBackground}`\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        margin: \"dense\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        placeholder: \"Body\",\n        sx: {\n          backgroundColor: colors.secondary\n        },\n        InputProps: {\n          style: {\n            color: colors.primary,\n            border: `1px solid ${colors.lightBackground}`\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      style: {\n        backgroundColor: colors.secondary\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        sx: {\n          color: colors.accent\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        sx: {\n          color: colors.accent\n        },\n        disabled: isSaveDisabled,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteDialogBox, \"egSnF/6BFZVxXdv2Dtyr42o4D9U=\");\n_c = NoteDialogBox;\nexport default NoteDialogBox;\nvar _c;\n$RefreshReg$(_c, \"NoteDialogBox\");","map":{"version":3,"names":["React","useEffect","useState","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","colors","jsxDEV","_jsxDEV","NoteDialogBox","open","onClose","onSave","title","initialTitle","body","initialBody","_s","setTitle","setBody","isSaveDisabled","setIsSaveDisabled","trim","handleSave","children","style","backgroundColor","lightBackground","color","primary","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","variant","margin","value","onChange","e","target","length","set","placeholder","sx","secondary","InputProps","border","multiline","rows","onClick","accent","disabled","_c","$RefreshReg$"],"sources":["/home/azhagu/workspace/note-taking/frontend/src/components/NoteDialogBox.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\nimport colors from \"../colors\";\n\ninterface NoteDialogBoxProps {\n  open: boolean;\n  onClose: () => void;\n  onSave: (noteData: { title: string; body: string }) => void;\n  title: string;\n  body: string;\n}\n\nconst NoteDialogBox: React.FC<NoteDialogBoxProps> = ({\n  open,\n  onClose,\n  onSave,\n  title: initialTitle,\n  body: initialBody,\n}) => {\n  const [title, setTitle] = React.useState(initialTitle);\n  const [body, setBody] = React.useState(initialBody);\n  const [isSaveDisabled, setIsSaveDisabled] = useState(true);\n\n  useEffect(() => {\n    // Enable or disable the \"Save\" button based on whether title and body are empty or not\n    setIsSaveDisabled(!title.trim() || !body.trim());\n  }, [title, body]);\n\n  useEffect(() => {\n    if (!open) {\n      // Reset the internal state when the dialog is closed\n      setTitle(initialTitle);\n      setBody(initialBody);\n    }\n  }, [open, initialTitle, initialBody]);\n\n  const handleSave = () => {\n    onSave({ title, body });\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle\n        style={{\n          backgroundColor: colors.lightBackground,\n          color: colors.primary,\n        }}\n      >\n        {initialTitle ? \"Edit Note\" : \"Add New Note\"}\n      </DialogTitle>\n      <DialogContent\n        style={{\n          backgroundColor: colors.lightBackground,\n          color: colors.primary,\n        }}\n      >\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          margin=\"dense\"\n          value={title}\n          onChange={(e) =>{\n            if(e.target.value.length ===0)\n            set\n            setTitle(e.target.value)\n          }}\n          placeholder=\"Title\"\n          sx={{ backgroundColor: colors.secondary }}\n          InputProps={{\n            style: {\n              color: colors.primary,\n              border: `1px solid ${colors.lightBackground}`,\n            },\n          }}\n        />\n        <TextField\n          fullWidth\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          margin=\"dense\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n          placeholder=\"Body\"\n          sx={{ backgroundColor: colors.secondary }}\n          InputProps={{\n            style: {\n              color: colors.primary,\n              border: `1px solid ${colors.lightBackground}`,\n            },\n          }}\n        />\n      </DialogContent>\n      <DialogActions style={{ backgroundColor: colors.secondary }}>\n        <Button onClick={onClose} sx={{ color: colors.accent }}>\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSave}\n          sx={{ color: colors.accent }}\n          disabled={isSaveDisabled}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default NoteDialogBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}