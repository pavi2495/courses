{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3001\";\nexport const getNoteById = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/notes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching note with ID ${id}:`, error);\n    throw error;\n  }\n};\nexport const getNotes = async (page = 1, pageSize = 10) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/notes`, {\n      params: {\n        page: page,\n        pageSize: pageSize\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching notes:\", error);\n    throw error;\n  }\n};\nexport const createNote = async note => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/notes`, note);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating note:\", error);\n    throw error;\n  }\n};\nexport const updateNote = async (id, note) => {\n  try {\n    const response = await axios.patch(`${API_BASE_URL}/notes/${id}`, note);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating note:\", error);\n    throw error;\n  }\n};\nexport const deleteNote = async id => {\n  try {\n    await axios.delete(`${API_BASE_URL}/notes/${id}`);\n  } catch (error) {\n    console.error(\"Error deleting note:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getNoteById","id","response","get","data","error","console","getNotes","page","pageSize","params","createNote","note","post","updateNote","patch","deleteNote","delete"],"sources":["/home/azhagu/workspace/note-taking/frontend/src/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3001\";\n\nexport interface Note {\n  id: number;\n  title: string;\n  body: string;\n  createdDate: Date;\n}\n\nexport interface AllNote {\n   notes:Note,\n   \n\n\n  }\n\nexport const getNoteById = async (id: number): Promise<Note> => {\n  try {\n    const response: AxiosResponse<Note> = await axios.get(\n      `${API_BASE_URL}/notes/${id}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching note with ID ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const getNotes = async (\n  page: number = 1,\n  pageSize: number = 10\n): Promise<Note[]> => {\n  try {\n    const response: AxiosResponse<Note[]> = await axios.get(\n      `${API_BASE_URL}/notes`,\n      {\n        params: {\n          page: page,\n          pageSize: pageSize,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching notes:\", error);\n    throw error;\n  }\n};\n\nexport const createNote = async (note: {\n  title: string;\n  body: string;\n}): Promise<Note> => {\n  try {\n    const response: AxiosResponse<Note> = await axios.post(\n      `${API_BASE_URL}/notes`,\n      note\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating note:\", error);\n    throw error;\n  }\n};\n\nexport const updateNote = async (\n  id: number,\n  note: { title: string; body: string }\n): Promise<Note> => {\n  try {\n    const response: AxiosResponse<Note> = await axios.patch(\n      `${API_BASE_URL}/notes/${id}`,\n      note\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating note:\", error);\n    throw error;\n  }\n};\n\nexport const deleteNote = async (id: number): Promise<void> => {\n  try {\n    await axios.delete(`${API_BASE_URL}/notes/${id}`);\n  } catch (error) {\n    console.error(\"Error deleting note:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,MAAMC,YAAY,GAAG,uBAAuB;AAgB5C,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAU,IAAoB;EAC9D,IAAI;IACF,MAAMC,QAA6B,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAClD,GAAEJ,YAAa,UAASE,EAAG,EAC9B,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAE,+BAA8BJ,EAAG,GAAE,EAAEI,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CACtBC,IAAY,GAAG,CAAC,EAChBC,QAAgB,GAAG,EAAE,KACD;EACpB,IAAI;IACF,MAAMP,QAA+B,GAAG,MAAMJ,KAAK,CAACK,GAAG,CACpD,GAAEJ,YAAa,QAAO,EACvB;MACEW,MAAM,EAAE;QACNF,IAAI,EAAEA,IAAI;QACVC,QAAQ,EAAEA;MACZ;IACF,CACF,CAAC;IACD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAOC,IAGhC,IAAoB;EACnB,IAAI;IACF,MAAMV,QAA6B,GAAG,MAAMJ,KAAK,CAACe,IAAI,CACnD,GAAEd,YAAa,QAAO,EACvBa,IACF,CAAC;IACD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAAA,CACxBb,EAAU,EACVW,IAAqC,KACnB;EAClB,IAAI;IACF,MAAMV,QAA6B,GAAG,MAAMJ,KAAK,CAACiB,KAAK,CACpD,GAAEhB,YAAa,UAASE,EAAG,EAAC,EAC7BW,IACF,CAAC;IACD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG,MAAOf,EAAU,IAAoB;EAC7D,IAAI;IACF,MAAMH,KAAK,CAACmB,MAAM,CAAE,GAAElB,YAAa,UAASE,EAAG,EAAC,CAAC;EACnD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}