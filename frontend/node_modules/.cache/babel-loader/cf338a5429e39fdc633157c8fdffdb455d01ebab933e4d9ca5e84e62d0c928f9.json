{"ast":null,"code":"var _jsxFileName = \"/home/azhagu/workspace/note-taking/frontend/src/pages/HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Fab, IconButton, Stack, Box, Typography, Pagination } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { createNote, deleteNote, getNotes } from \"../api\";\nimport colors from \"../colors\";\nimport DeleteConfirmationDialogBox from \"../components/DeleteConfirmDialogBox\";\nimport NoteDialogBox from \"../components/NoteDialogBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [noteToDelete, setNoteToDelete] = useState({\n    id: -1,\n    title: \"\"\n  });\n  const [newNote, setNewNote] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const navigate = useNavigate();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [editedNote, setEditedNote] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const [totalCount, setTotalCount] = useState(0);\n\n  //Pagination\n  const itemsPerPage = 10;\n  const homePagePageListRef = useRef(null);\n  const [homePageFetchNextPage, setHomePageFetchNextPage] = useState({\n    page: 1,\n    limit: itemsPerPage\n  });\n  const handleOpenDialog = () => {\n    setIsDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n    setEditedNote({\n      title: \"\",\n      body: \"\"\n    });\n  };\n  const MAX_body_LENGTH = 1000;\n  const fetchData = async () => {\n    try {\n      const updatedNotes = await getNotes(homePageFetchNextPage.page, homePageFetchNextPage.limit);\n      setTotalCount(updatedNotes.totalCount);\n      setNotes(updatedNotes.notes); // Update the state with the new notes data\n    } catch (error) {\n      // Handle error fetching notes\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n\n  // Use useEffect to fetch updated notes whenever newNote changes\n  useEffect(() => {\n    // Fetch updated notes whenever newNote changes\n    fetchData();\n  }, [newNote]); // Dependency array with newNote ensures the effect runs whenever newNote changes\n\n  useEffect(() => {\n    fetchData();\n  }, [homePageFetchNextPage.page, homePageFetchNextPage.limit, fetchData]);\n  const handleDeleteConfirmationOpen = (id, title) => {\n    setNoteToDelete({\n      id,\n      title\n    });\n    setDeleteConfirmationOpen(true);\n  };\n  const handleDeleteConfirmationClose = () => {\n    setNoteToDelete({\n      id: -1,\n      title: \"\"\n    });\n    setDeleteConfirmationOpen(false);\n  };\n  const handleDeleteNote = async () => {\n    try {\n      // Delete note using the API function\n      await deleteNote(noteToDelete.id);\n      const updatedNotes = notes.filter(note => note.id !== noteToDelete.id);\n      setNotes(updatedNotes);\n      handleDeleteConfirmationClose();\n    } catch (error) {\n      // Handle error deleting note\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      // Truncate body if it exceeds 1000 characters\n      const truncatedBody = noteData.body.slice(0, MAX_body_LENGTH);\n      const savedNote = await createNote({\n        title: noteData.title,\n        body: truncatedBody\n      });\n      setIsDialogOpen(false);\n      setNewNote({\n        title: noteData.title,\n        body: truncatedBody\n      });\n      setEditedNote({\n        title: \"\",\n        body: \"\"\n      });\n    } catch (error) {\n      // Handle error creating note\n      console.error(\"Error creating note:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flex: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"0\",\n        left: \"0\",\n        bottom: \"0px\",\n        padding: \"30px\",\n        backgroundColor: colors.lightBackground\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        sx: {\n          color: colors.primary,\n          textAlign: \"center\",\n          marginBottom: \"20px\",\n          lineHeight: \"56px\",\n          fontSize: \"45px\",\n          fontWeight: 600,\n          fontFamily: \"sans-serif\"\n        },\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ref: homePagePageListRef,\n        sx: {\n          overflowY: \"auto\",\n          marginBottom: \"20px\",\n          \"&::-webkit-scrollbar\": {\n            width: \"0.4em\"\n          },\n          \"&::-webkit-scrollbar-track\": {\n            \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.00)\"\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            backgroundColor: \"rgba(0,0,100,.1)\",\n            borderRadius: \"10px\"\n          }\n        },\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: colors.secondary,\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            marginBottom: \"10px\",\n            position: \"relative\",\n            display: \"flex\",\n            alignItems: \"center\",\n            // Align items vertically within each list item\n            marginRight: \"5px\"\n          },\n          onClick: () => navigate(`/note/${note.id}`),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              cursor: \"pointer\",\n              color: colors.primary,\n              // Set the text color to primary color from the palette\n              flexGrow: 1,\n              marginRight: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                margin: \"0\",\n                fontSize: \"18px\"\n              },\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            onClick: e => {\n              e.stopPropagation(); // Prevent click propagation to the parent div\n              handleDeleteConfirmationOpen(note.id, note.title);\n            },\n            style: {\n              position: \"absolute\",\n              top: \"50%\",\n              right: \"10px\",\n              transform: \"translateY(-50%)\",\n              color: colors.accent // Set the icon color to accent color from the palette\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          // Center the items horizontally\n          position: \"fixed\",\n          bottom: \"20px\",\n          left: \"50%\",\n          // Center the stack in the middle of the screen\n          transform: \"translateX(-50%)\" // Center the stack in the middle of the screen\n        },\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: Math.ceil((totalCount || 0) / itemsPerPage),\n          size: \"small\"\n          // On page number selection\n          ,\n          onChange: (event, value) => {\n            var _homePagePageListRef$;\n            setHomePageFetchNextPage({\n              ...homePageFetchNextPage,\n              page: value\n            });\n            (_homePagePageListRef$ = homePagePageListRef.current) === null || _homePagePageListRef$ === void 0 ? void 0 : _homePagePageListRef$.scrollTo(0, 0);\n          },\n          sx: {\n            // Adjust font size of the pagination buttons\n            \"& .MuiPaginationItem-root\": {\n              fontSize: \"0.6rem\",\n              minWidth: \"30px\",\n              height: \"30px\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        style: {\n          position: \"fixed\",\n          bottom: \"20px\",\n          right: \"20px\",\n          backgroundColor: colors.accent\n        },\n        onClick: handleOpenDialog,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          style: {\n            color: colors.secondary\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteDialogBox, {\n        open: isDialogOpen,\n        onClose: handleCloseDialog,\n        onSave: handleSaveNote,\n        title: editedNote.title,\n        body: editedNote.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmationDialogBox, {\n        onOpenDialogBox: deleteConfirmationOpen,\n        onClickDeleteButton: handleDeleteNote,\n        onCloseDialogBox: handleDeleteConfirmationClose,\n        noteToDelete: {\n          id: noteToDelete.id,\n          title: noteToDelete.title\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        sx: {\n          justifyContent: \"center\"\n          // marginTop: '100px',\n          // marginBottom: '20px',\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"HQ/xB5bUAqiBxs6WmIcIJrE9mk0=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","Fab","IconButton","Stack","Box","Typography","Pagination","AddIcon","DeleteIcon","createNote","deleteNote","getNotes","colors","DeleteConfirmationDialogBox","NoteDialogBox","jsxDEV","_jsxDEV","HomePage","_s","notes","setNotes","deleteConfirmationOpen","setDeleteConfirmationOpen","noteToDelete","setNoteToDelete","id","title","newNote","setNewNote","body","navigate","isDialogOpen","setIsDialogOpen","editedNote","setEditedNote","totalCount","setTotalCount","itemsPerPage","homePagePageListRef","homePageFetchNextPage","setHomePageFetchNextPage","page","limit","handleOpenDialog","handleCloseDialog","MAX_body_LENGTH","fetchData","updatedNotes","error","console","handleDeleteConfirmationOpen","handleDeleteConfirmationClose","handleDeleteNote","filter","note","handleSaveNote","noteData","truncatedBody","slice","savedNote","sx","display","flex","children","position","top","right","left","bottom","padding","backgroundColor","lightBackground","component","color","primary","textAlign","marginBottom","lineHeight","fontSize","fontWeight","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","ref","overflowY","width","borderRadius","map","style","secondary","alignItems","marginRight","onClick","cursor","flexGrow","margin","e","stopPropagation","transform","accent","flexDirection","justifyContent","count","Math","ceil","size","onChange","event","value","_homePagePageListRef$","current","scrollTo","minWidth","height","open","onClose","onSave","onOpenDialogBox","onClickDeleteButton","onCloseDialogBox","direction","_c","$RefreshReg$"],"sources":["/home/azhagu/workspace/note-taking/frontend/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  Fab,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  IconButton,\n  OutlinedInput,\n  Stack,\n  Box,\n  Typography,\n  Pagination,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Note, createNote, deleteNote, getNotes } from \"../api\";\nimport colors from \"../colors\";\nimport DeleteConfirmationDialogBox from \"../components/DeleteConfirmDialogBox\";\nimport NoteDialogBox from \"../components/NoteDialogBox\";\n\nconst HomePage: React.FC = () => {\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [noteToDelete, setNoteToDelete] = useState({ id: -1, title: \"\" });\n  const [newNote, setNewNote] = useState({ title: \"\", body: \"\" });\n  const navigate = useNavigate();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [editedNote, setEditedNote] = useState({ title: \"\", body: \"\" });\n  const [totalCount, setTotalCount] = useState(0);\n\n  //Pagination\n  const itemsPerPage = 10;\n  const homePagePageListRef = useRef<HTMLDivElement>(null);\n  const [homePageFetchNextPage, setHomePageFetchNextPage] = useState({\n    page: 1,\n    limit: itemsPerPage,\n  });\n\n  const handleOpenDialog = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n    setEditedNote({ title: \"\", body: \"\" });\n  };\n  const MAX_body_LENGTH = 1000;\n\n  const fetchData = async () => {\n    try {\n      const updatedNotes = await getNotes(\n        homePageFetchNextPage.page,\n        homePageFetchNextPage.limit\n      );\n      setTotalCount(updatedNotes.totalCount);\n      setNotes(updatedNotes.notes); // Update the state with the new notes data\n    } catch (error) {\n      // Handle error fetching notes\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n\n  // Use useEffect to fetch updated notes whenever newNote changes\n  useEffect(() => {\n    // Fetch updated notes whenever newNote changes\n    fetchData();\n  }, [newNote]); // Dependency array with newNote ensures the effect runs whenever newNote changes\n\n  useEffect(() => {\n    fetchData();\n  }, [homePageFetchNextPage.page, homePageFetchNextPage.limit, fetchData]);\n\n  const handleDeleteConfirmationOpen = (id: number, title: string) => {\n    setNoteToDelete({ id, title });\n    setDeleteConfirmationOpen(true);\n  };\n\n  const handleDeleteConfirmationClose = () => {\n    setNoteToDelete({ id: -1, title: \"\" });\n    setDeleteConfirmationOpen(false);\n  };\n\n  const handleDeleteNote = async () => {\n    try {\n      // Delete note using the API function\n      await deleteNote(noteToDelete.id);\n      const updatedNotes = notes.filter((note) => note.id !== noteToDelete.id);\n      setNotes(updatedNotes);\n      handleDeleteConfirmationClose();\n    } catch (error) {\n      // Handle error deleting note\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n\n  const handleSaveNote = async (noteData: { title: string; body: string }) => {\n    try {\n      // Truncate body if it exceeds 1000 characters\n      const truncatedBody = noteData.body.slice(0, MAX_body_LENGTH);\n\n      const savedNote = await createNote({\n        title: noteData.title,\n        body: truncatedBody,\n      });\n\n      setIsDialogOpen(false);\n      setNewNote({ title: noteData.title, body: truncatedBody });\n      setEditedNote({ title: \"\", body: \"\" });\n    } catch (error) {\n      // Handle error creating note\n      console.error(\"Error creating note:\", error);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flex: 1,\n      }}\n    >\n      <Stack\n        sx={{\n          position: \"absolute\",\n          top: \"0px\",\n          right: \"0\",\n          left: \"0\",\n          bottom: \"0px\",\n          padding: \"30px\",\n          backgroundColor: colors.lightBackground,\n        }}\n      >\n        <Typography\n          component={\"h1\"}\n          sx={{\n            color: colors.primary,\n            textAlign: \"center\",\n            marginBottom: \"20px\",\n            lineHeight: \"56px\",\n            fontSize: \"45px\",\n            fontWeight: 600,\n            fontFamily: \"sans-serif\",\n          }}\n        >\n          Notes\n        </Typography>\n        <Box\n          ref={homePagePageListRef}\n          sx={{\n            overflowY: \"auto\",\n            marginBottom: \"20px\",\n            \"&::-webkit-scrollbar\": {\n              width: \"0.4em\",\n            },\n            \"&::-webkit-scrollbar-track\": {\n              \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.00)\",\n            },\n            \"&::-webkit-scrollbar-thumb\": {\n              backgroundColor: \"rgba(0,0,100,.1)\",\n              borderRadius: \"10px\",\n            },\n          }}\n        >\n          {notes.map((note) => (\n            <div\n              key={note.id}\n              style={{\n                backgroundColor: colors.secondary,\n                padding: \"10px\",\n                borderRadius: \"5px\",\n                marginBottom: \"10px\",\n                position: \"relative\",\n                display: \"flex\",\n                alignItems: \"center\", // Align items vertically within each list item\n                marginRight: \"5px\",\n              }}\n              onClick={() => navigate(`/note/${note.id}`)}\n            >\n              <div\n                style={{\n                  cursor: \"pointer\",\n                  color: colors.primary, // Set the text color to primary color from the palette\n                  flexGrow: 1,\n                  marginRight: \"10px\",\n                }}\n              >\n                <h2 style={{ margin: \"0\", fontSize: \"18px\" }}>{note.title}</h2>\n              </div>\n              <IconButton\n                color=\"secondary\"\n                onClick={(e) => {\n                  e.stopPropagation(); // Prevent click propagation to the parent div\n                  handleDeleteConfirmationOpen(note.id, note.title);\n                }}\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  right: \"10px\",\n                  transform: \"translateY(-50%)\",\n                  color: colors.accent, // Set the icon color to accent color from the palette\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </div>\n          ))}\n        </Box>\n        <Stack\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\", // Center the items horizontally\n            position: \"fixed\",\n            bottom: \"20px\",\n            left: \"50%\", // Center the stack in the middle of the screen\n            transform: \"translateX(-50%)\", // Center the stack in the middle of the screen\n          }}\n        >\n          <Pagination\n            count={Math.ceil((totalCount || 0) / itemsPerPage)}\n            size=\"small\"\n            // On page number selection\n            onChange={(event, value) => {\n              setHomePageFetchNextPage({\n                ...homePageFetchNextPage,\n                page: value,\n              });\n              homePagePageListRef.current?.scrollTo(0, 0);\n            }}\n            sx={{\n              // Adjust font size of the pagination buttons\n              \"& .MuiPaginationItem-root\": {\n                fontSize: \"0.6rem\",\n                minWidth: \"30px\",\n                height: \"30px\",\n              },\n            }}\n          />\n        </Stack>\n\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          style={{\n            position: \"fixed\",\n            bottom: \"20px\",\n            right: \"20px\",\n            backgroundColor: colors.accent,\n          }}\n          onClick={handleOpenDialog}\n        >\n          <AddIcon style={{ color: colors.secondary }} />\n        </Fab>\n\n        <NoteDialogBox\n          open={isDialogOpen}\n          onClose={handleCloseDialog}\n          onSave={handleSaveNote}\n          title={editedNote.title}\n          body={editedNote.body}\n        />\n\n        <DeleteConfirmationDialogBox\n          onOpenDialogBox={deleteConfirmationOpen}\n          onClickDeleteButton={handleDeleteNote}\n          onCloseDialogBox={handleDeleteConfirmationClose}\n          noteToDelete={{ id: noteToDelete.id, title: noteToDelete.title }}\n        />\n        <Stack\n          direction={\"row\"}\n          sx={{\n            justifyContent: \"center\",\n            // marginTop: '100px',\n            // marginBottom: '20px',\n          }}\n        ></Stack>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAAeC,WAAW,QAAQ,kBAAkB;AACpD,SACEC,GAAG,EAOHC,UAAU,EAEVC,KAAK,EACLC,GAAG,EACHC,UAAU,EACVC,UAAU,QACL,eAAe;AACtB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAAeC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,QAAQ;AAC/D,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,2BAA2B,MAAM,sCAAsC;AAC9E,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACsB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,EAAE,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACvE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC;IAAE2B,KAAK,EAAE,EAAE;IAAEG,IAAI,EAAE;EAAG,CAAC,CAAC;EAC/D,MAAMC,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC;IAAE2B,KAAK,EAAE,EAAE;IAAEG,IAAI,EAAE;EAAG,CAAC,CAAC;EACrE,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMsC,YAAY,GAAG,EAAE;EACvB,MAAMC,mBAAmB,GAAGxC,MAAM,CAAiB,IAAI,CAAC;EACxD,MAAM,CAACyC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGzC,QAAQ,CAAC;IACjE0C,IAAI,EAAE,CAAC;IACPC,KAAK,EAAEL;EACT,CAAC,CAAC;EAEF,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BX,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9BZ,eAAe,CAAC,KAAK,CAAC;IACtBE,aAAa,CAAC;MAAER,KAAK,EAAE,EAAE;MAAEG,IAAI,EAAE;IAAG,CAAC,CAAC;EACxC,CAAC;EACD,MAAMgB,eAAe,GAAG,IAAI;EAE5B,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMpC,QAAQ,CACjC4B,qBAAqB,CAACE,IAAI,EAC1BF,qBAAqB,CAACG,KACxB,CAAC;MACDN,aAAa,CAACW,YAAY,CAACZ,UAAU,CAAC;MACtCf,QAAQ,CAAC2B,YAAY,CAAC5B,KAAK,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACAnD,SAAS,CAAC,MAAM;IACd;IACAiD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACnB,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf9B,SAAS,CAAC,MAAM;IACdiD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,qBAAqB,CAACE,IAAI,EAAEF,qBAAqB,CAACG,KAAK,EAAEI,SAAS,CAAC,CAAC;EAExE,MAAMI,4BAA4B,GAAGA,CAACzB,EAAU,EAAEC,KAAa,KAAK;IAClEF,eAAe,CAAC;MAAEC,EAAE;MAAEC;IAAM,CAAC,CAAC;IAC9BJ,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAM6B,6BAA6B,GAAGA,CAAA,KAAM;IAC1C3B,eAAe,CAAC;MAAEC,EAAE,EAAE,CAAC,CAAC;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IACtCJ,yBAAyB,CAAC,KAAK,CAAC;EAClC,CAAC;EAED,MAAM8B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,MAAM1C,UAAU,CAACa,YAAY,CAACE,EAAE,CAAC;MACjC,MAAMsB,YAAY,GAAG5B,KAAK,CAACkC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC7B,EAAE,KAAKF,YAAY,CAACE,EAAE,CAAC;MACxEL,QAAQ,CAAC2B,YAAY,CAAC;MACtBI,6BAA6B,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMO,cAAc,GAAG,MAAOC,QAAyC,IAAK;IAC1E,IAAI;MACF;MACA,MAAMC,aAAa,GAAGD,QAAQ,CAAC3B,IAAI,CAAC6B,KAAK,CAAC,CAAC,EAAEb,eAAe,CAAC;MAE7D,MAAMc,SAAS,GAAG,MAAMlD,UAAU,CAAC;QACjCiB,KAAK,EAAE8B,QAAQ,CAAC9B,KAAK;QACrBG,IAAI,EAAE4B;MACR,CAAC,CAAC;MAEFzB,eAAe,CAAC,KAAK,CAAC;MACtBJ,UAAU,CAAC;QAAEF,KAAK,EAAE8B,QAAQ,CAAC9B,KAAK;QAAEG,IAAI,EAAE4B;MAAc,CAAC,CAAC;MAC1DvB,aAAa,CAAC;QAAER,KAAK,EAAE,EAAE;QAAEG,IAAI,EAAE;MAAG,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEhC,OAAA,CAACZ,GAAG;IACFwD,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE;IACR,CAAE;IAAAC,QAAA,eAEF/C,OAAA,CAACb,KAAK;MACJyD,EAAE,EAAE;QACFI,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,KAAK;QACVC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE1D,MAAM,CAAC2D;MAC1B,CAAE;MAAAR,QAAA,gBAEF/C,OAAA,CAACX,UAAU;QACTmE,SAAS,EAAE,IAAK;QAChBZ,EAAE,EAAE;UACFa,KAAK,EAAE7D,MAAM,CAAC8D,OAAO;UACrBC,SAAS,EAAE,QAAQ;UACnBC,YAAY,EAAE,MAAM;UACpBC,UAAU,EAAE,MAAM;UAClBC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,GAAG;UACfC,UAAU,EAAE;QACd,CAAE;QAAAjB,QAAA,EACH;MAED;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbpE,OAAA,CAACZ,GAAG;QACFiF,GAAG,EAAE/C,mBAAoB;QACzBsB,EAAE,EAAE;UACF0B,SAAS,EAAE,MAAM;UACjBV,YAAY,EAAE,MAAM;UACpB,sBAAsB,EAAE;YACtBW,KAAK,EAAE;UACT,CAAC;UACD,4BAA4B,EAAE;YAC5B,oBAAoB,EAAE;UACxB,CAAC;UACD,4BAA4B,EAAE;YAC5BjB,eAAe,EAAE,kBAAkB;YACnCkB,YAAY,EAAE;UAChB;QACF,CAAE;QAAAzB,QAAA,EAED5C,KAAK,CAACsE,GAAG,CAAEnC,IAAI,iBACdtC,OAAA;UAEE0E,KAAK,EAAE;YACLpB,eAAe,EAAE1D,MAAM,CAAC+E,SAAS;YACjCtB,OAAO,EAAE,MAAM;YACfmB,YAAY,EAAE,KAAK;YACnBZ,YAAY,EAAE,MAAM;YACpBZ,QAAQ,EAAE,UAAU;YACpBH,OAAO,EAAE,MAAM;YACf+B,UAAU,EAAE,QAAQ;YAAE;YACtBC,WAAW,EAAE;UACf,CAAE;UACFC,OAAO,EAAEA,CAAA,KAAMhE,QAAQ,CAAE,SAAQwB,IAAI,CAAC7B,EAAG,EAAC,CAAE;UAAAsC,QAAA,gBAE5C/C,OAAA;YACE0E,KAAK,EAAE;cACLK,MAAM,EAAE,SAAS;cACjBtB,KAAK,EAAE7D,MAAM,CAAC8D,OAAO;cAAE;cACvBsB,QAAQ,EAAE,CAAC;cACXH,WAAW,EAAE;YACf,CAAE;YAAA9B,QAAA,eAEF/C,OAAA;cAAI0E,KAAK,EAAE;gBAAEO,MAAM,EAAE,GAAG;gBAAEnB,QAAQ,EAAE;cAAO,CAAE;cAAAf,QAAA,EAAET,IAAI,CAAC5B;YAAK;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACNpE,OAAA,CAACd,UAAU;YACTuE,KAAK,EAAC,WAAW;YACjBqB,OAAO,EAAGI,CAAC,IAAK;cACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;cACrBjD,4BAA4B,CAACI,IAAI,CAAC7B,EAAE,EAAE6B,IAAI,CAAC5B,KAAK,CAAC;YACnD,CAAE;YACFgE,KAAK,EAAE;cACL1B,QAAQ,EAAE,UAAU;cACpBC,GAAG,EAAE,KAAK;cACVC,KAAK,EAAE,MAAM;cACbkC,SAAS,EAAE,kBAAkB;cAC7B3B,KAAK,EAAE7D,MAAM,CAACyF,MAAM,CAAE;YACxB,CAAE;YAAAtC,QAAA,eAEF/C,OAAA,CAACR,UAAU;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAtCR9B,IAAI,CAAC7B,EAAE;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuCT,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpE,OAAA,CAACb,KAAK;QACJyD,EAAE,EAAE;UACFC,OAAO,EAAE,MAAM;UACfyC,aAAa,EAAE,KAAK;UACpBC,cAAc,EAAE,QAAQ;UAAE;UAC1BvC,QAAQ,EAAE,OAAO;UACjBI,MAAM,EAAE,MAAM;UACdD,IAAI,EAAE,KAAK;UAAE;UACbiC,SAAS,EAAE,kBAAkB,CAAE;QACjC,CAAE;QAAArC,QAAA,eAEF/C,OAAA,CAACV,UAAU;UACTkG,KAAK,EAAEC,IAAI,CAACC,IAAI,CAAC,CAACvE,UAAU,IAAI,CAAC,IAAIE,YAAY,CAAE;UACnDsE,IAAI,EAAC;UACL;UAAA;UACAC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAK;YAAA,IAAAC,qBAAA;YAC1BvE,wBAAwB,CAAC;cACvB,GAAGD,qBAAqB;cACxBE,IAAI,EAAEqE;YACR,CAAC,CAAC;YACF,CAAAC,qBAAA,GAAAzE,mBAAmB,CAAC0E,OAAO,cAAAD,qBAAA,uBAA3BA,qBAAA,CAA6BE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;UAC7C,CAAE;UACFrD,EAAE,EAAE;YACF;YACA,2BAA2B,EAAE;cAC3BkB,QAAQ,EAAE,QAAQ;cAClBoC,QAAQ,EAAE,MAAM;cAChBC,MAAM,EAAE;YACV;UACF;QAAE;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAERpE,OAAA,CAACf,GAAG;QACFwE,KAAK,EAAC,SAAS;QACf,cAAW,KAAK;QAChBiB,KAAK,EAAE;UACL1B,QAAQ,EAAE,OAAO;UACjBI,MAAM,EAAE,MAAM;UACdF,KAAK,EAAE,MAAM;UACbI,eAAe,EAAE1D,MAAM,CAACyF;QAC1B,CAAE;QACFP,OAAO,EAAEnD,gBAAiB;QAAAoB,QAAA,eAE1B/C,OAAA,CAACT,OAAO;UAACmF,KAAK,EAAE;YAAEjB,KAAK,EAAE7D,MAAM,CAAC+E;UAAU;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eAENpE,OAAA,CAACF,aAAa;QACZsG,IAAI,EAAErF,YAAa;QACnBsF,OAAO,EAAEzE,iBAAkB;QAC3B0E,MAAM,EAAE/D,cAAe;QACvB7B,KAAK,EAAEO,UAAU,CAACP,KAAM;QACxBG,IAAI,EAAEI,UAAU,CAACJ;MAAK;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eAEFpE,OAAA,CAACH,2BAA2B;QAC1B0G,eAAe,EAAElG,sBAAuB;QACxCmG,mBAAmB,EAAEpE,gBAAiB;QACtCqE,gBAAgB,EAAEtE,6BAA8B;QAChD5B,YAAY,EAAE;UAAEE,EAAE,EAAEF,YAAY,CAACE,EAAE;UAAEC,KAAK,EAAEH,YAAY,CAACG;QAAM;MAAE;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACFpE,OAAA,CAACb,KAAK;QACJuH,SAAS,EAAE,KAAM;QACjB9D,EAAE,EAAE;UACF2C,cAAc,EAAE;UAChB;UACA;QACF;MAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAClE,EAAA,CAnQID,QAAkB;EAAA,QAKLjB,WAAW;AAAA;AAAA2H,EAAA,GALxB1G,QAAkB;AAqQxB,eAAeA,QAAQ;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}